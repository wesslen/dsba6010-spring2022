---
title: Project Check-in 1
date: "`r Sys.Date()`"
menu:
  assignment:
    parent: Project
    weight: 1
type: docs
toc: true
---

## Objective: 

* **Present 5-7 minute presentation on a Bayesian article, blog or tutorial**

* You may choose an academic paper, a blog post, or tutorial on a programming language or open source package.

* You are welcome to choose your own or alternatively choose from any of the applications or ideas below.

### Option 1: Article or Blog

Create presentation summarizing the article and blog (e.g., PowerPoint, Google Slides, Keynote, [`xaringan`](https://bookdown.org/yihui/rmarkdown/xaringan.html))

Include in your presentation:

- **First slide**: What is the background? What makes it Bayesian?

- **2-4 Slides**: Explain at least two important figures.

- **Last Slide**: Questions or Observations

### Option 2: Programming tutorial or notebook

Present a demo of the notebook (e.g., [Colab](colab.research.google.com), [binder](https://mybinder.org/), [GitPod](https://www.gitpod.io/), or your local computer)


### Example presentation
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Difference between ML vs Bayes vs Freq        | [Regression per Stat School](https://koaning.io/posts/twain-learning/)                                                                                                                                         | <i class="fas fa-blog"></i>    |          |


{{< gslides src="https://docs.google.com/presentation/d/e/2PACX-1vSFY2YaBD0zyv9_XIfzHJCBO6Dn5egf5anH_QrhVxJ_0_lMxpss1kV1NWB4wKOWTBymUr2cnuGPIcbP/embed?start=false&loop=false&delayms=3000" >}}

## FAQ

```{r echo=FALSE}
blogdown::shortcode_open('spoiler', text = 'Can I work with someone?')
```

Individual only. Final project you can work with someone else.

```{r echo=FALSE}
blogdown::shortcode_close('spoiler')
```

```{r echo=FALSE}
blogdown::shortcode_open('spoiler', text = 'Can I pre-record my talk and submit that?')
```

Yes! You can pre-record your talk and submit a .mp4 video recording as an alternative.

```{r echo=FALSE}
blogdown::shortcode_close('spoiler')
```

```{r echo=FALSE}
blogdown::shortcode_open('spoiler', text = 'How do I present a tutorial / notebook?')
```

Either run real time locally, on the cloud, or review static rendering (e.g., html or pdf). If you choose this option, you can simply recreate the original notebook code. What you'll be expected is to understand and **explain** what the code is doing.

```{r echo=FALSE}
blogdown::shortcode_close('spoiler')
```

```{r echo=FALSE}
blogdown::shortcode_open('spoiler', text = 'If I do a tutorial / notebook, do I need to use a new data set than the original tutorial or notebook?')
```

No. You can use the original if you can explain the code/problem and run it on your own. Spend more time to create replicable reruns like cloud versions that other students can run as well (e.g., [RStudio.Cloud](https://rstudio.cloud/), [Colab](https://colab.research.google.com/), [binder](https://github.com/binder-examples/r), [GitPod](https://www.gitpod.io/), etc.).

```{r echo=FALSE}
blogdown::shortcode_close('spoiler')
```

```{r echo=FALSE}
blogdown::shortcode_open('spoiler', text = "I don't understand everything in the post. I'm worried I may not know everything. Is that okay?")
```

Absolutely! You're not expected to know everything. Part of this exercise is learning to **be confident to be comfortable with being confused**.

I recommend keeping your slides to only images or very short bullet points. Many students have the urge to do the opposite -- add as much to the slide to make up for worries of not knowing everything. Just state items you don't understand, especially in your conclusion.

```{r echo=FALSE}
blogdown::shortcode_close('spoiler')
```

## Suggested References

### Sciences

| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Bayesian Model of Planetary Motion            | [Bayesian Model of Planetary   Motion](https://mc-stan.org/users/documentation/case-studies/planetary_motion/planetary_motion.html)                                                                            | <i class="fas fa-blog"></i>    | R        |
| Exoplanet Detection                           | [Intro to gaussian processes in Stan: Finding   exoplanets](https://www.youtube.com/watch?v=132s2B-mzBg)                                                                                                       | <i class="fas fa-video"></i>   | R        |
| Covid Vaccine Efficacy                        | [Bayesian Statistics of Efficacy of the Pfizer-BioNTech COVID-19 Vaccine   â€” part   I](https://towardsdatascience.com/bayesian-statistics-of-efficacy-of-pfizer-biontech-covid-19-vaccine-part-i-efac8d4e0539) | <i class="fas fa-blog"></i>    |          |
| Bayesian Cognitive Modeling                   | [A Beginner's Guide to Bayesian Cognitive   Modeling](https://youtu.be/NNySqCSmIo4)                                                                                                                            | <i class="fas fa-video"></i>   | Turing   |


### Time or Space
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Games (Battleship)                            | [Playing Battleship with Bayesian Search Theory, Thompson Sampling, and   Approximate Bayesian   Computation](https://austinrochford.com/posts/2021-09-02-battleship-bayes.html)                               | <i class="fas fa-blog"></i>    | Python   |
| Intro to Gaussian Processes                   | [Visual exploration of Gaussian   processes](https://distill.pub/2019/visual-exploration-gaussian-processes/)                                                                                                  | <i class="fas fa-blog"></i>    |          |
| Bayesian Time Series                          | [Uber's Time Series Inference and Forecasting   package](https://eng.uber.com/orbit/)                                                                                                                          | <i class="fas fa-blog"></i>    | Python   |

### Financial / Political
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Bayesian Portfolio Analysis                   | [Bayesian Portfolio Optimisation: Introducing the Black-Litterman   Model](https://hudsonthames.org/bayesian-portfolio-optimisation-the-black-litterman-model/)                                                | <i class="fas fa-blog"></i>    | R        |
| Visualizing Bayesian Unemployment   Forecasts | [Uncertainty examples with US unemployment   data](https://github.com/mjskay/uncertainty-examples/blob/master/us-unemployment.md)                                                                              | <i class="fas fa-code"></i>    | R        |
| Election Forecasting                          | [Economist 2020 Election   Forecasting](https://projects.economist.com/us-2020-forecast/president/how-this-works)                                                                                              | <i class="fas fa-blog"></i>    |          |
| Election Forecasting                          | [An Updated Dynamic Bayesian Forecasting Model for the US Presidential   Election](http://www.stat.columbia.edu/~gelman/research/published/Harvard_Data_Science_Review.pdf)                                    | <i class="fas fa-newspaper"></i> |          |

### Machine Learning
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Fairness in ML                                | [Great Potential of Priors: Common Sence Reduced to   Priors](https://koaning.io/posts/priors-of-great-potential/)                                                                                             | <i class="fas fa-blog"></i>    | Python   |
| Fairness in ML                                | [How You Can Add Fairness Constraints to Models Using   Priors](https://www.youtube.com/watch?v=WfcCXlxkBb0&t=3110s)                                                                                           | <i class="fas fa-video"></i>   | Python   |


### Marketing / Consumer Behavior
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| A / B testing                                 | [R package `bayesAB` tutorial](https://cran.r-project.org/web/packages/bayesAB/vignettes/introduction.html)                                                                                                                       | <i class="fas fa-cube"></i>    | R        |
| Bayesian Optimization                         | [Lyft Bayesian   Optimization](https://eng.lyft.com/parameter-exploration-at-lyft-b9d2a1483c82)                                                                                                                | <i class="fas fa-blog"></i>    |          |
| Bayesian Optimization                         | [Apply Interpretable Adaptive   Optimization](https://machinelearning.apple.com/research/interpretable-adaptive-optimization)                                                                                  | <i class="fas fa-blog"></i>    |          |
| User Ratings                                  | [A Bayesian Model of Lego Set   Ratings](https://austinrochford.com/posts/lego-ratings-bayes.html)                                                                                                             | <i class="fas fa-blog"></i>    | Python   |
| Recommender & Multiarmed Bandits              | [A penguin fish-recommender systems using multi-armed bandits pt.   1](https://sebastiancallh.github.io/post/multi-armed-bandits-and-penguins/)                                                                | <i class="fas fa-blog"></i>    | Julia    |

### Human-Computer Interaction and Visualization
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Uncertainty Visualizations in Mobile Apps     | [Uncertainty displays using quantile dotplots or CDFs improve transit   decision-making (Fernandes et al., 2018)](https://www.mjskay.com/papers/chi2018-uncertain-bus-decisions.pdf)                                                    | <i class="fas fa-newspaper"></i> | R        |
| Bayesian Methodology in HCI                   | [Why Bayesian Statistics Better Fit the Culture and Incentives of   HCI (Kay et al., 2016)](https://www.mjskay.com/papers/chi_2016_bayes.pdf)                                                                                     | <i class="fas fa-newspaper"></i> | R        |
| Bayesian Data Visualizations                   | [Evaluating Bayesian Model Visualisations (Stein & Williamson, 2022)](https://arxiv.org/pdf/2201.03604.pdf)                                                                                     | <i class="fas fa-newspaper"></i> | R        |

### Natural language programming
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Original paper on LDA (topic modeling)     | [Latent dirichlet allocation (Blei, Ng, Jordan, 2003)](https://www.jmlr.org/papers/volume3/blei03a/blei03a.pdf)                                                    | <i class="fas fa-newspaper"></i> |         |
| Introduction to Topic Modeling                  | [Probabilistic Topic Models](http://www.cs.columbia.edu/~blei/papers/Blei2012.pdf)                                                                                     | <i class="fas fa-newspaper"></i> |         |

### Probabilistic programming
| Topic                                         | Reference                                                                                                                                                                                                      | Type                           | Language |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------|----------|
| Any Stan Code Examples                       | [Stan website](https://mc-stan.org/users/documentation/tutorials)                                                                                                                                                         | <i class="fas fa-cube"></i>    | Many   |
| Any Turing.jl Code Tutorials                  | [Turing.jl website](https://turing.ml/dev/tutorials/)                                                                                                                                                                           | <i class="fas fa-cube"></i>    | Julia    |
| Any PyMC3 Code Examples                       | [PyMC website](https://docs.pymc.io/en/v3/nb_tutorials/index.html)                                                                                                                                                         | <i class="fas fa-cube"></i>    | Python   |